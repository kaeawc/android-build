name: "Commit"


on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

permissions:
  checks: write

jobs:
  build-and-test:
    name: "Build & Unit Test"
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v4

      - uses: ./.github/actions/gradle-task-run
        with:
          gradle-tasks: "testDebugUnitTest assertModuleGraph lintRelease assembleDebug assembleAndroidTest"
          reuse-configuration-cache: true

      - name: "Store Android Lint Report"
        uses: actions/upload-artifact@v3
        if: success()
        with:
          name: android-lint-report
          path: |
            app/build/reports/lint-results-*.html

      - name: "Store APK"
        uses: actions/upload-artifact@v3
        with:
          name: apk
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: "Store Test APK"
        uses: actions/upload-artifact@v3
        with:
          name: test-apk
          path: app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk
#
#
#  spotless:
#    name: "Spotless Check"
#    runs-on: ubuntu-latest
#    steps:
#      - name: "Git Checkout"
#        uses: actions/checkout@v4
#
#      - uses: ./.github/actions/gradle-task-run
#        with:
#          gradle-tasks: "spotlessCheck"
#          # Due to https://github.com/diffplug/spotless/issues/987
#          reuse-configuration-cache: false

  ui-tests:
    name: "Android UI Tests"
    runs-on: ubuntu-latest
    if: github.secret_source == 'Actions'
    needs:
      - build-and-test
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v3
        with:
          name: apk

      - uses: actions/download-artifact@v3
        with:
          name: test-apk

      - name: "Run tests on emulator.wtf"
        uses: emulator-wtf/run-tests@v0
        with:
          api-token: ${{ secrets.EW_API_TOKEN }}
          app: app-debug.apk
          test: app-debug-androidTest.apk
          outputs-dir: build/test-results

      - name: "Publish Test Report"
        uses: mikepenz/action-junit-report@v4
        if: always() # always run even if the tests fail
        with:
          check_name: "UI Test Report"
          report_paths: 'build/test-results/**/*.xml'
